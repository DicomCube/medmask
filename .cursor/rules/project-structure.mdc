---
description:
globs:
alwaysApply: false
---
# MedMask 项目结构总览

本项目是一个医疗影像分割 mask 处理库，核心代码位于 [`medmask/`](mdc:medmask)。主要模块：

1. `medmask.core` – 核心数据结构与算法
   • [`mask.py`](mdc:medmask/core/mask.py)：定义 `SegmentationMask`，提供 mask 的存储、查询及延迟创建接口。
   • [`mapping.py`](mdc:medmask/core/mapping.py)：实现 `LabelMapping`，提供 label 与语义名称的双向映射。

2. `medmask.archive` – 多 mask 容器格式
   • [`archive_file.py`](mdc:medmask/archive/archive_file.py)：实现二进制 *.maska* 文件读写的 `MaskArchive` 类，支持随机访问与可插拔压缩。

3. `medmask.compression` – 压缩编解码器注册表 
   • [`__init__.py`](mdc:medmask/compression/__init__.py)：注册编解码器并暴露 `get_codec`。
   • [`zstd_codec.py`](mdc:medmask/compression/zstd_codec.py)：默认 Zstandard 压缩实现 `ZstdMaskCodec`。

4. `medmask.io` – 历史 I/O 工具集合
   • [`utils.py`](mdc:medmask/io/utils.py)：提供 `match_allowed_values`，通过区间比较高效筛选像素值。

常用入口:
• 导入 `SegmentationMask` 与 `LabelMapping`: 
```python
from medmask.core import SegmentationMask, LabelMapping
```
• 读写多 mask 容器:
```python
from medmask.archive import MaskArchive
archive = MaskArchive('case001.maska', mode='w', space=space)
archive.add_segmask(seg_mask, name='artery')
```

> **提示** 在阅读源码时，可优先查看上面列出的文件以快速定位核心逻辑。
